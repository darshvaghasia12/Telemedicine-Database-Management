/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function LiveTranscoding() { }
if (false) {
    /**
     * Bitrate of the CDN live audio output stream in Kbps.
     * Positive integer. The default value is `48`, and the highest value is `128`.
     * @type {?}
     */
    LiveTranscoding.prototype.audioBitrate;
    /**
     * Agora’s self-defined audio channel type.
     *
     * Agora recommends choosing 1 or 2. Special players are required if you choose 3, 4 or 5:
     * 1. (Default) Mono
     * 2. Dual sound channels
     * 3. Three sound channels
     * 4. Four sound channels
     * 5. Five sound channels
     * @type {?}
     */
    LiveTranscoding.prototype.audioChannels;
    /**
     * Audio sampling rate:
     * - 32000: 32 kHz
     * - 44100: (Default) 44.1 kHz
     * - 48000: 48 kHz
     * @type {?}
     */
    LiveTranscoding.prototype.audioSampleRate;
    /**
     * The background color in RGB hex value.
     *
     * Value only, do not include a #. The default value is `0x000000`. The value range is `[0x000000, 0xffffff]`.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.backgroundColor;
    /**
     * Height of the video.
     *
     * Positive integer, the default value is 360. The value range is `[1, 10000]`.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.height;
    /**
     * - true: Low latency with unassured quality.
     * - false: (Default）High latency with assured quality.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.lowLatency;
    /**
     * Manages the user layout configuration in the CDN live streaming.
     *
     * Agora supports a maximum of 17 transcoding users in a CDN streaming channel.
     * @see [TranscodingUser](https://docs.agora.io/en/Video/API%20Reference/web/interfaces/agorartc.transcodinguser.html) for details.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.transcodingUsers;
    /**
     * Number of users; default value is 0. The maximum is 17.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.userCount;
    /**
     * Bitrate of the CDN live output video stream.
     *
     * Positive integer. The default value is 400 Kbps. The value range is `[1,1000000]`.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.videoBitrate;
    /**
     * Video codec profile type:
     *
     * - 66: Baseline video codec profile. Generally used in video calls on mobile phones.
     * - 77: Main video codec profile.Generally used in mainstream electronics, such as MP4 players, portable video players, PSP, and iPads.
     * - 100: (Default) High video codec profile.Generally used in high - resolution broadcasts or television.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.videoCodecProfile;
    /**
     * Frame rate of the output data stream set for CDN live.
     *
     * Positive integer. The default value is 15 fps. The value range is `[1, 10000]`.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.videoFramerate;
    /**
     * Video GOP in frames. The default value is 30 frames. The value range is `[1,10000]`.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.videoGop;
    /**
     * Width of the video.
     *
     * Positive integer, the default value is `640`. The value range is `[1, 10000]`.
     * @type {?|undefined}
     */
    LiveTranscoding.prototype.width;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGl2ZS10cmFuc2NvZGluZy5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1hZ29yYS8iLCJzb3VyY2VzIjpbImxpYi9kYXRhL21vZGVscy9saXZlLXRyYW5zY29kaW5nLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFQSxxQ0FrRkM7Ozs7Ozs7SUE3RUMsdUNBQXFCOzs7Ozs7Ozs7Ozs7SUFXckIsd0NBQWlDOzs7Ozs7OztJQU9qQywwQ0FBdUM7Ozs7Ozs7SUFNdkMsMENBQXlCOzs7Ozs7O0lBTXpCLGlDQUFnQjs7Ozs7O0lBS2hCLHFDQUFxQjs7Ozs7Ozs7SUFPckIsMkNBQXFDOzs7OztJQUlyQyxvQ0FBbUI7Ozs7Ozs7SUFNbkIsdUNBQXNCOzs7Ozs7Ozs7SUFRdEIsNENBQWtDOzs7Ozs7O0lBTWxDLHlDQUF3Qjs7Ozs7SUFJeEIsbUNBQWtCOzs7Ozs7O0lBTWxCLGdDQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHJhbnNjb2RpbmdVc2VyIH0gZnJvbSAnLi90cmFuc2NvZGluZy11c2VyLm1vZGVsJztcblxuZXhwb3J0IGludGVyZmFjZSBMaXZlVHJhbnNjb2Rpbmcge1xuICAvKipcbiAgICogQml0cmF0ZSBvZiB0aGUgQ0ROIGxpdmUgYXVkaW8gb3V0cHV0IHN0cmVhbSBpbiBLYnBzLlxuICAgKiBQb3NpdGl2ZSBpbnRlZ2VyLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBgNDhgLCBhbmQgdGhlIGhpZ2hlc3QgdmFsdWUgaXMgYDEyOGAuXG4gICAqL1xuICBhdWRpb0JpdHJhdGU6IG51bWJlcjtcbiAgLyoqXG4gICAqIEFnb3Jh4oCZcyBzZWxmLWRlZmluZWQgYXVkaW8gY2hhbm5lbCB0eXBlLlxuICAgKlxuICAgKiBBZ29yYSByZWNvbW1lbmRzIGNob29zaW5nIDEgb3IgMi4gU3BlY2lhbCBwbGF5ZXJzIGFyZSByZXF1aXJlZCBpZiB5b3UgY2hvb3NlIDMsIDQgb3IgNTpcbiAgICogMS4gKERlZmF1bHQpIE1vbm9cbiAgICogMi4gRHVhbCBzb3VuZCBjaGFubmVsc1xuICAgKiAzLiBUaHJlZSBzb3VuZCBjaGFubmVsc1xuICAgKiA0LiBGb3VyIHNvdW5kIGNoYW5uZWxzXG4gICAqIDUuIEZpdmUgc291bmQgY2hhbm5lbHNcbiAgICovXG4gIGF1ZGlvQ2hhbm5lbHM6IDEgfCAyIHwgMyB8IDQgfCA1O1xuICAvKipcbiAgICogQXVkaW8gc2FtcGxpbmcgcmF0ZTpcbiAgICogLSAzMjAwMDogMzIga0h6XG4gICAqIC0gNDQxMDA6IChEZWZhdWx0KSA0NC4xIGtIelxuICAgKiAtIDQ4MDAwOiA0OCBrSHpcbiAgICovXG4gIGF1ZGlvU2FtcGxlUmF0ZTogMzIwMDAgfCA0NDEwMCB8IDQ4MDAwO1xuICAvKipcbiAgICogVGhlIGJhY2tncm91bmQgY29sb3IgaW4gUkdCIGhleCB2YWx1ZS5cbiAgICpcbiAgICogVmFsdWUgb25seSwgZG8gbm90IGluY2x1ZGUgYSAjLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBgMHgwMDAwMDBgLiBUaGUgdmFsdWUgcmFuZ2UgaXMgYFsweDAwMDAwMCwgMHhmZmZmZmZdYC5cbiAgICovXG4gIGJhY2tncm91bmRDb2xvcj86IG51bWJlcjtcbiAgLyoqXG4gICAqIEhlaWdodCBvZiB0aGUgdmlkZW8uXG4gICAqXG4gICAqIFBvc2l0aXZlIGludGVnZXIsIHRoZSBkZWZhdWx0IHZhbHVlIGlzIDM2MC4gVGhlIHZhbHVlIHJhbmdlIGlzIGBbMSwgMTAwMDBdYC5cbiAgICovXG4gIGhlaWdodD86IG51bWJlcjtcbiAgLyoqXG4gICAqIC0gdHJ1ZTogTG93IGxhdGVuY3kgd2l0aCB1bmFzc3VyZWQgcXVhbGl0eS5cbiAgICogLSBmYWxzZTogKERlZmF1bHTvvIlIaWdoIGxhdGVuY3kgd2l0aCBhc3N1cmVkIHF1YWxpdHkuXG4gICAqL1xuICBsb3dMYXRlbmN5PzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIE1hbmFnZXMgdGhlIHVzZXIgbGF5b3V0IGNvbmZpZ3VyYXRpb24gaW4gdGhlIENETiBsaXZlIHN0cmVhbWluZy5cbiAgICpcbiAgICogQWdvcmEgc3VwcG9ydHMgYSBtYXhpbXVtIG9mIDE3IHRyYW5zY29kaW5nIHVzZXJzIGluIGEgQ0ROIHN0cmVhbWluZyBjaGFubmVsLlxuICAgKiBAc2VlIFtUcmFuc2NvZGluZ1VzZXJdKGh0dHBzOi8vZG9jcy5hZ29yYS5pby9lbi9WaWRlby9BUEklMjBSZWZlcmVuY2Uvd2ViL2ludGVyZmFjZXMvYWdvcmFydGMudHJhbnNjb2Rpbmd1c2VyLmh0bWwpIGZvciBkZXRhaWxzLlxuICAgKi9cbiAgdHJhbnNjb2RpbmdVc2Vycz86IFRyYW5zY29kaW5nVXNlcltdO1xuICAvKipcbiAgICogTnVtYmVyIG9mIHVzZXJzOyBkZWZhdWx0IHZhbHVlIGlzIDAuIFRoZSBtYXhpbXVtIGlzIDE3LlxuICAgKi9cbiAgdXNlckNvdW50PzogbnVtYmVyO1xuICAvKipcbiAgICogQml0cmF0ZSBvZiB0aGUgQ0ROIGxpdmUgb3V0cHV0IHZpZGVvIHN0cmVhbS5cbiAgICpcbiAgICogUG9zaXRpdmUgaW50ZWdlci4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgNDAwIEticHMuIFRoZSB2YWx1ZSByYW5nZSBpcyBgWzEsMTAwMDAwMF1gLlxuICAgKi9cbiAgdmlkZW9CaXRyYXRlPzogbnVtYmVyO1xuICAvKipcbiAgICogVmlkZW8gY29kZWMgcHJvZmlsZSB0eXBlOlxuICAgKlxuICAgKiAtIDY2OiBCYXNlbGluZSB2aWRlbyBjb2RlYyBwcm9maWxlLiBHZW5lcmFsbHkgdXNlZCBpbiB2aWRlbyBjYWxscyBvbiBtb2JpbGUgcGhvbmVzLlxuICAgKiAtIDc3OiBNYWluIHZpZGVvIGNvZGVjIHByb2ZpbGUuR2VuZXJhbGx5IHVzZWQgaW4gbWFpbnN0cmVhbSBlbGVjdHJvbmljcywgc3VjaCBhcyBNUDQgcGxheWVycywgcG9ydGFibGUgdmlkZW8gcGxheWVycywgUFNQLCBhbmQgaVBhZHMuXG4gICAqIC0gMTAwOiAoRGVmYXVsdCkgSGlnaCB2aWRlbyBjb2RlYyBwcm9maWxlLkdlbmVyYWxseSB1c2VkIGluIGhpZ2ggLSByZXNvbHV0aW9uIGJyb2FkY2FzdHMgb3IgdGVsZXZpc2lvbi5cbiAgICovXG4gIHZpZGVvQ29kZWNQcm9maWxlPzogNjYgfCA3NyB8IDEwMDtcbiAgLyoqXG4gICAqIEZyYW1lIHJhdGUgb2YgdGhlIG91dHB1dCBkYXRhIHN0cmVhbSBzZXQgZm9yIENETiBsaXZlLlxuICAgKlxuICAgKiBQb3NpdGl2ZSBpbnRlZ2VyLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyAxNSBmcHMuIFRoZSB2YWx1ZSByYW5nZSBpcyBgWzEsIDEwMDAwXWAuXG4gICAqL1xuICB2aWRlb0ZyYW1lcmF0ZT86IG51bWJlcjtcbiAgLyoqXG4gICAqIFZpZGVvIEdPUCBpbiBmcmFtZXMuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIDMwIGZyYW1lcy4gVGhlIHZhbHVlIHJhbmdlIGlzIGBbMSwxMDAwMF1gLlxuICAgKi9cbiAgdmlkZW9Hb3A/OiBudW1iZXI7XG4gIC8qKlxuICAgKiBXaWR0aCBvZiB0aGUgdmlkZW8uXG4gICAqXG4gICAqIFBvc2l0aXZlIGludGVnZXIsIHRoZSBkZWZhdWx0IHZhbHVlIGlzIGA2NDBgLiBUaGUgdmFsdWUgcmFuZ2UgaXMgYFsxLCAxMDAwMF1gLlxuICAgKi9cbiAgd2lkdGg/OiBudW1iZXI7XG59XG4iXX0=