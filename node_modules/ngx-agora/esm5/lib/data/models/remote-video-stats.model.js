/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Video statistics of the remote stream.
 * @record
 */
export function RemoteVideoStats() { }
if (false) {
    /**
     * End-to-end delay in ms.
     *
     * Delay from capturing to playing the video.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.End2EndDelay;
    /**
     * Whether the video is muted or not.
     *
     * - "1": Muted.
     * - "0": Unmuted.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.MuteState;
    /**
     * Packet loss rate (%) of the remote video.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.PacketLossRate;
    /**
     * Bitrate of the received video, in Kbps.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.RecvBitrate;
    /**
     * Resolution height of the received video, in pixels.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.RecvResolutionHeight;
    /**
     * Resolution width of the received video, in pixels.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.RecvResolutionWidth;
    /**
     * Rendering frame rate of the decoded video, in fps.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.RenderFrameRate;
    /**
     * Height (pixels) of the rendered video.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.RenderResolutionHeight;
    /**
     * Width (pixels) of the rendered video.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.RenderResolutionWidth;
    /**
     * Total freeze time of the received video.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.TotalFreezeTime;
    /**
     * Total playing duration of the received video.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.TotalPlayDuration;
    /**
     * Transport delay in ms.
     *
     * Delay from sending to receiving the video.
     * @type {?|undefined}
     */
    RemoteVideoStats.prototype.TransportDelay;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVtb3RlLXZpZGVvLXN0YXRzLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWFnb3JhLyIsInNvdXJjZXMiOlsibGliL2RhdGEvbW9kZWxzL3JlbW90ZS12aWRlby1zdGF0cy5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUdBLHNDQXNDQzs7Ozs7Ozs7SUFoQ0Msd0NBQXNCOzs7Ozs7OztJQU90QixxQ0FBbUI7Ozs7O0lBRW5CLDBDQUF3Qjs7Ozs7SUFFeEIsdUNBQXFCOzs7OztJQUVyQixnREFBOEI7Ozs7O0lBRTlCLCtDQUE2Qjs7Ozs7SUFFN0IsMkNBQXlCOzs7OztJQUV6QixrREFBZ0M7Ozs7O0lBRWhDLGlEQUErQjs7Ozs7SUFFL0IsMkNBQXlCOzs7OztJQUV6Qiw2Q0FBMkI7Ozs7Ozs7SUFNM0IsMENBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBWaWRlbyBzdGF0aXN0aWNzIG9mIHRoZSByZW1vdGUgc3RyZWFtLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFJlbW90ZVZpZGVvU3RhdHMge1xuICAvKipcbiAgICogRW5kLXRvLWVuZCBkZWxheSBpbiBtcy5cbiAgICpcbiAgICogRGVsYXkgZnJvbSBjYXB0dXJpbmcgdG8gcGxheWluZyB0aGUgdmlkZW8uXG4gICAqL1xuICBFbmQyRW5kRGVsYXk/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBXaGV0aGVyIHRoZSB2aWRlbyBpcyBtdXRlZCBvciBub3QuXG4gICAqXG4gICAqIC0gXCIxXCI6IE11dGVkLlxuICAgKiAtIFwiMFwiOiBVbm11dGVkLlxuICAgKi9cbiAgTXV0ZVN0YXRlPzogc3RyaW5nO1xuICAvKiogUGFja2V0IGxvc3MgcmF0ZSAoJSkgb2YgdGhlIHJlbW90ZSB2aWRlby4gKi9cbiAgUGFja2V0TG9zc1JhdGU/OiBzdHJpbmc7XG4gIC8qKiBCaXRyYXRlIG9mIHRoZSByZWNlaXZlZCB2aWRlbywgaW4gS2Jwcy4gKi9cbiAgUmVjdkJpdHJhdGU/OiBzdHJpbmc7XG4gIC8qKiBSZXNvbHV0aW9uIGhlaWdodCBvZiB0aGUgcmVjZWl2ZWQgdmlkZW8sIGluIHBpeGVscy4gKi9cbiAgUmVjdlJlc29sdXRpb25IZWlnaHQ/OiBzdHJpbmc7XG4gIC8qKiBSZXNvbHV0aW9uIHdpZHRoIG9mIHRoZSByZWNlaXZlZCB2aWRlbywgaW4gcGl4ZWxzLiAqL1xuICBSZWN2UmVzb2x1dGlvbldpZHRoPzogc3RyaW5nO1xuICAvKiogUmVuZGVyaW5nIGZyYW1lIHJhdGUgb2YgdGhlIGRlY29kZWQgdmlkZW8sIGluIGZwcy4gKi9cbiAgUmVuZGVyRnJhbWVSYXRlPzogc3RyaW5nO1xuICAvKiogSGVpZ2h0IChwaXhlbHMpIG9mIHRoZSByZW5kZXJlZCB2aWRlby4gKi9cbiAgUmVuZGVyUmVzb2x1dGlvbkhlaWdodD86IHN0cmluZztcbiAgLyoqIFdpZHRoIChwaXhlbHMpIG9mIHRoZSByZW5kZXJlZCB2aWRlby4gKi9cbiAgUmVuZGVyUmVzb2x1dGlvbldpZHRoPzogc3RyaW5nO1xuICAvKiogVG90YWwgZnJlZXplIHRpbWUgb2YgdGhlIHJlY2VpdmVkIHZpZGVvLiAqL1xuICBUb3RhbEZyZWV6ZVRpbWU/OiBzdHJpbmc7XG4gIC8qKiBUb3RhbCBwbGF5aW5nIGR1cmF0aW9uIG9mIHRoZSByZWNlaXZlZCB2aWRlby4gKi9cbiAgVG90YWxQbGF5RHVyYXRpb24/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBUcmFuc3BvcnQgZGVsYXkgaW4gbXMuXG4gICAqXG4gICAqIERlbGF5IGZyb20gc2VuZGluZyB0byByZWNlaXZpbmcgdGhlIHZpZGVvLlxuICAgKi9cbiAgVHJhbnNwb3J0RGVsYXk/OiBzdHJpbmc7XG59XG4iXX0=