/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * A class for configuring the imported live broadcast voice or video stream.
 *
 * \@example
 * const injectStreamConfig = {
 *  width: 0,
 *  height: 0,
 *  videoGop: 30,
 *  videoFramerate: 15,
 *  videoBitrate: 400,
 *  audioSampleRate: 44100,
 *  audioChannels: 1,
 * };
 * @record
 */
export function InjectStreamConfig() { }
if (false) {
    /**
     * Audio bitrate of the added stream to the broadcast.
     * Positive integer. The default value is 48. The value range is [1, 10000].
     *
     * \@remark
     * Agora recommends that you stay with the default value and not reset it at this point of time.
     * @type {?|undefined}
     */
    InjectStreamConfig.prototype.audioBitrate;
    /**
     * Audio channels to add into the broadcast.
     * Positive integer. The default value is 1. The value range is [1, 2].
     *
     * \@remark
     * Agora recommends that you stay with the default value and not reset it at this point of time.
     * @type {?|undefined}
     */
    InjectStreamConfig.prototype.audioChannels;
    /**
     * Audio sampling rate of the added stream to the broadcast.
     * 32000: 32 kHz
     * 44100: (Default) 44.1 kHz
     * 48000: 48 kHz
     *
     * \@remark
     * Agora recommends that you stay with the default value and not reset it at this point of time.
     * @type {?|undefined}
     */
    InjectStreamConfig.prototype.audioSampleRate;
    /**
     * Video bitrate of the added stream to the broadcast.
     * Positive integer. The default value is 400 Kbps. The value range is [1, 10000].
     *
     * \@remark
     * The setting of the video bitrate is closely linked to the resolution. If the video bitrate you set is beyond
     * the reasonable range, the SDK will set it within the reasonable range instead.
     * @type {?|undefined}
     */
    InjectStreamConfig.prototype.videoBitrate;
    /**
     * Video frame rate of the added stream to the broadcast.
     * Positive integer. The default value is 15 fps. The value range is [1, 10000].
     * @type {?|undefined}
     */
    InjectStreamConfig.prototype.videoFramerate;
    /**
     * Video GOP of the added stream to the broadcast.
     * Positive integer. The default value is 30 frames. The value range is [1, 10000].
     * @type {?|undefined}
     */
    InjectStreamConfig.prototype.videoGop;
    /**
     * Width of the added stream to the broadcast.
     * Integer, the default value is 0, which is the same width as the original stream. The value range is [0, 10000].
     * @type {?|undefined}
     */
    InjectStreamConfig.prototype.width;
    /**
     * Height of the added stream to the broadcast.
     * Integer, the default value is 0, which is the same height as the original stream. The value range is [0, 10000].
     * @type {?|undefined}
     */
    InjectStreamConfig.prototype.height;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5qZWN0LXN0cmVhbS1jb25maWcubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtYWdvcmEvIiwic291cmNlcyI6WyJsaWIvZGF0YS9tb2RlbHMvaW5qZWN0LXN0cmVhbS1jb25maWcubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWNBLHdDQXdEQzs7Ozs7Ozs7OztJQWhEQywwQ0FBc0I7Ozs7Ozs7OztJQVF0QiwyQ0FBdUI7Ozs7Ozs7Ozs7O0lBVXZCLDZDQUF5Qjs7Ozs7Ozs7OztJQVN6QiwwQ0FBc0I7Ozs7OztJQUt0Qiw0Q0FBd0I7Ozs7OztJQUt4QixzQ0FBa0I7Ozs7OztJQUtsQixtQ0FBZTs7Ozs7O0lBS2Ysb0NBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIGNsYXNzIGZvciBjb25maWd1cmluZyB0aGUgaW1wb3J0ZWQgbGl2ZSBicm9hZGNhc3Qgdm9pY2Ugb3IgdmlkZW8gc3RyZWFtLlxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCBpbmplY3RTdHJlYW1Db25maWcgPSB7XG4gKiAgd2lkdGg6IDAsXG4gKiAgaGVpZ2h0OiAwLFxuICogIHZpZGVvR29wOiAzMCxcbiAqICB2aWRlb0ZyYW1lcmF0ZTogMTUsXG4gKiAgdmlkZW9CaXRyYXRlOiA0MDAsXG4gKiAgYXVkaW9TYW1wbGVSYXRlOiA0NDEwMCxcbiAqICBhdWRpb0NoYW5uZWxzOiAxLFxuICogfTtcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBJbmplY3RTdHJlYW1Db25maWcge1xuICAvKipcbiAgICogQXVkaW8gYml0cmF0ZSBvZiB0aGUgYWRkZWQgc3RyZWFtIHRvIHRoZSBicm9hZGNhc3QuXG4gICAqIFBvc2l0aXZlIGludGVnZXIuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIDQ4LiBUaGUgdmFsdWUgcmFuZ2UgaXMgWzEsIDEwMDAwXS5cbiAgICpcbiAgICogQHJlbWFya1xuICAgKiBBZ29yYSByZWNvbW1lbmRzIHRoYXQgeW91IHN0YXkgd2l0aCB0aGUgZGVmYXVsdCB2YWx1ZSBhbmQgbm90IHJlc2V0IGl0IGF0IHRoaXMgcG9pbnQgb2YgdGltZS5cbiAgICovXG4gIGF1ZGlvQml0cmF0ZT86IG51bWJlcjtcbiAgLyoqXG4gICAqIEF1ZGlvIGNoYW5uZWxzIHRvIGFkZCBpbnRvIHRoZSBicm9hZGNhc3QuXG4gICAqIFBvc2l0aXZlIGludGVnZXIuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIDEuIFRoZSB2YWx1ZSByYW5nZSBpcyBbMSwgMl0uXG4gICAqXG4gICAqIEByZW1hcmtcbiAgICogQWdvcmEgcmVjb21tZW5kcyB0aGF0IHlvdSBzdGF5IHdpdGggdGhlIGRlZmF1bHQgdmFsdWUgYW5kIG5vdCByZXNldCBpdCBhdCB0aGlzIHBvaW50IG9mIHRpbWUuXG4gICAqL1xuICBhdWRpb0NoYW5uZWxzPzogbnVtYmVyO1xuICAvKipcbiAgICogQXVkaW8gc2FtcGxpbmcgcmF0ZSBvZiB0aGUgYWRkZWQgc3RyZWFtIHRvIHRoZSBicm9hZGNhc3QuXG4gICAqIDMyMDAwOiAzMiBrSHpcbiAgICogNDQxMDA6IChEZWZhdWx0KSA0NC4xIGtIelxuICAgKiA0ODAwMDogNDgga0h6XG4gICAqXG4gICAqIEByZW1hcmtcbiAgICogQWdvcmEgcmVjb21tZW5kcyB0aGF0IHlvdSBzdGF5IHdpdGggdGhlIGRlZmF1bHQgdmFsdWUgYW5kIG5vdCByZXNldCBpdCBhdCB0aGlzIHBvaW50IG9mIHRpbWUuXG4gICAqL1xuICBhdWRpb1NhbXBsZVJhdGU/OiBudW1iZXI7XG4gIC8qKlxuICAgKiBWaWRlbyBiaXRyYXRlIG9mIHRoZSBhZGRlZCBzdHJlYW0gdG8gdGhlIGJyb2FkY2FzdC5cbiAgICogUG9zaXRpdmUgaW50ZWdlci4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgNDAwIEticHMuIFRoZSB2YWx1ZSByYW5nZSBpcyBbMSwgMTAwMDBdLlxuICAgKlxuICAgKiBAcmVtYXJrXG4gICAqIFRoZSBzZXR0aW5nIG9mIHRoZSB2aWRlbyBiaXRyYXRlIGlzIGNsb3NlbHkgbGlua2VkIHRvIHRoZSByZXNvbHV0aW9uLiBJZiB0aGUgdmlkZW8gYml0cmF0ZSB5b3Ugc2V0IGlzIGJleW9uZFxuICAgKiB0aGUgcmVhc29uYWJsZSByYW5nZSwgdGhlIFNESyB3aWxsIHNldCBpdCB3aXRoaW4gdGhlIHJlYXNvbmFibGUgcmFuZ2UgaW5zdGVhZC5cbiAgICovXG4gIHZpZGVvQml0cmF0ZT86IG51bWJlcjtcbiAgLyoqXG4gICAqIFZpZGVvIGZyYW1lIHJhdGUgb2YgdGhlIGFkZGVkIHN0cmVhbSB0byB0aGUgYnJvYWRjYXN0LlxuICAgKiBQb3NpdGl2ZSBpbnRlZ2VyLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyAxNSBmcHMuIFRoZSB2YWx1ZSByYW5nZSBpcyBbMSwgMTAwMDBdLlxuICAgKi9cbiAgdmlkZW9GcmFtZXJhdGU/OiBudW1iZXI7XG4gIC8qKlxuICAgKiBWaWRlbyBHT1Agb2YgdGhlIGFkZGVkIHN0cmVhbSB0byB0aGUgYnJvYWRjYXN0LlxuICAgKiBQb3NpdGl2ZSBpbnRlZ2VyLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyAzMCBmcmFtZXMuIFRoZSB2YWx1ZSByYW5nZSBpcyBbMSwgMTAwMDBdLlxuICAgKi9cbiAgdmlkZW9Hb3A/OiBudW1iZXI7XG4gIC8qKlxuICAgKiBXaWR0aCBvZiB0aGUgYWRkZWQgc3RyZWFtIHRvIHRoZSBicm9hZGNhc3QuXG4gICAqIEludGVnZXIsIHRoZSBkZWZhdWx0IHZhbHVlIGlzIDAsIHdoaWNoIGlzIHRoZSBzYW1lIHdpZHRoIGFzIHRoZSBvcmlnaW5hbCBzdHJlYW0uIFRoZSB2YWx1ZSByYW5nZSBpcyBbMCwgMTAwMDBdLlxuICAgKi9cbiAgd2lkdGg/OiBudW1iZXI7XG4gIC8qKlxuICAgKiBIZWlnaHQgb2YgdGhlIGFkZGVkIHN0cmVhbSB0byB0aGUgYnJvYWRjYXN0LlxuICAgKiBJbnRlZ2VyLCB0aGUgZGVmYXVsdCB2YWx1ZSBpcyAwLCB3aGljaCBpcyB0aGUgc2FtZSBoZWlnaHQgYXMgdGhlIG9yaWdpbmFsIHN0cmVhbS4gVGhlIHZhbHVlIHJhbmdlIGlzIFswLCAxMDAwMF0uXG4gICAqL1xuICBoZWlnaHQ/OiBudW1iZXI7XG59XG4iXX0=