/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function RemoteAudioStats() { }
if (false) {
    /**
     * Decoding type of the received audio.
     *
     * - "1": Opus.
     * - "2": AAC.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.CodecType;
    /**
     * End-to-end delay in ms.
     *
     * Delay from capturing to playing the audio.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.End2EndDelay;
    /**
     * Whether the audio is muted or not.
     * - "1": Muted.
     * - "0": Unmuted.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.MuteState;
    /**
     * Packet loss rate (%) of the remote audio.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.PacketLossRate;
    /**
     * Bitrate of the received audio, in Kbps.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.RecvBitrate;
    /**
     * Volume of the received audio.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.RecvLevel;
    /**
     * Total freeze time of the received audio.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.TotalFreezeTime;
    /**
     * Total playing duration of the received audio.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.TotalPlayDuration;
    /**
     * Transport delay in ms.
     *
     * Delay from sending to receiving the audio.
     * @type {?|undefined}
     */
    RemoteAudioStats.prototype.TransportDelay;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVtb3RlLWF1ZGlvLXN0YXRzLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWFnb3JhLyIsInNvdXJjZXMiOlsibGliL2RhdGEvbW9kZWxzL3JlbW90ZS1hdWRpby1zdGF0cy5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0NBb0NDOzs7Ozs7Ozs7SUE3QkMscUNBQW1COzs7Ozs7O0lBTW5CLHdDQUFzQjs7Ozs7OztJQU10QixxQ0FBbUI7Ozs7O0lBRW5CLDBDQUF3Qjs7Ozs7SUFFeEIsdUNBQXFCOzs7OztJQUVyQixxQ0FBbUI7Ozs7O0lBRW5CLDJDQUF5Qjs7Ozs7SUFFekIsNkNBQTJCOzs7Ozs7O0lBTTNCLDBDQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgUmVtb3RlQXVkaW9TdGF0cyB7XG4gIC8qKlxuICAgKiBEZWNvZGluZyB0eXBlIG9mIHRoZSByZWNlaXZlZCBhdWRpby5cbiAgICpcbiAgICogLSBcIjFcIjogT3B1cy5cbiAgICogLSBcIjJcIjogQUFDLlxuICAgKi9cbiAgQ29kZWNUeXBlPzogc3RyaW5nO1xuICAvKipcbiAgICogRW5kLXRvLWVuZCBkZWxheSBpbiBtcy5cbiAgICpcbiAgICogRGVsYXkgZnJvbSBjYXB0dXJpbmcgdG8gcGxheWluZyB0aGUgYXVkaW8uXG4gICAqL1xuICBFbmQyRW5kRGVsYXk/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBXaGV0aGVyIHRoZSBhdWRpbyBpcyBtdXRlZCBvciBub3QuXG4gICAqIC0gXCIxXCI6IE11dGVkLlxuICAgKiAtIFwiMFwiOiBVbm11dGVkLlxuICAgKi9cbiAgTXV0ZVN0YXRlPzogc3RyaW5nO1xuICAvKiogUGFja2V0IGxvc3MgcmF0ZSAoJSkgb2YgdGhlIHJlbW90ZSBhdWRpby4gKi9cbiAgUGFja2V0TG9zc1JhdGU/OiBzdHJpbmc7XG4gIC8qKiBCaXRyYXRlIG9mIHRoZSByZWNlaXZlZCBhdWRpbywgaW4gS2Jwcy4gKi9cbiAgUmVjdkJpdHJhdGU/OiBzdHJpbmc7XG4gIC8qKiBWb2x1bWUgb2YgdGhlIHJlY2VpdmVkIGF1ZGlvLiAqL1xuICBSZWN2TGV2ZWw/OiBzdHJpbmc7XG4gIC8qKiBUb3RhbCBmcmVlemUgdGltZSBvZiB0aGUgcmVjZWl2ZWQgYXVkaW8uICovXG4gIFRvdGFsRnJlZXplVGltZT86IHN0cmluZztcbiAgLyoqIFRvdGFsIHBsYXlpbmcgZHVyYXRpb24gb2YgdGhlIHJlY2VpdmVkIGF1ZGlvLiAqL1xuICBUb3RhbFBsYXlEdXJhdGlvbj86IHN0cmluZztcbiAgLyoqXG4gICAqIFRyYW5zcG9ydCBkZWxheSBpbiBtcy5cbiAgICpcbiAgICogRGVsYXkgZnJvbSBzZW5kaW5nIHRvIHJlY2VpdmluZyB0aGUgYXVkaW8uXG4gICAqL1xuICBUcmFuc3BvcnREZWxheT86IHN0cmluZztcbn1cbiJdfQ==