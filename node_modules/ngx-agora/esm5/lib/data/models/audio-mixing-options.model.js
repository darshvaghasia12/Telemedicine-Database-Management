/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Audio mixing settings.
 * @record
 */
export function AudioMixingOptions() { }
if (false) {
    /**
     *  Whether or not to store the audio mixing file in the cache.
     *
     * - `true`: (default) store the audio mixing file in the cache to speed up mixing this file the next time.
     * - `false`: do not store the audio mixing file in the cache to save RAM.
     * @type {?|undefined}
     */
    AudioMixingOptions.prototype.cacheResource;
    /**
     * Number of playback loops (only supports Chrome 65+)
     * A positive integer. The value range is `[1,10000]`. The default value is `1`.
     * @type {?|undefined}
     */
    AudioMixingOptions.prototype.cycle;
    /**
     * Path of the online audio file to mix. ASCII characters only, and the string length must be greater than 0 and less than 256 bytes.
     * Supported audio formats: mp3, aac, and other audio formats depending on the browser.
     * @type {?}
     */
    AudioMixingOptions.prototype.filePath;
    /**
     * Whether the audio mixing file loops infinitely.
     *
     * - `true`: The audio mixing file loops infinitely. Do not use this option if cycle is specified.
     * - `false`: (Default) Disables the infinite loops.
     * @type {?|undefined}
     */
    AudioMixingOptions.prototype.loop;
    /**
     * Sets the playback position (ms) of the audio mixing file. An integer, and the value range is `[0,100000000]`.
     * If you need to play the file from the beginning, set this paramter to `0`.
     * @type {?}
     */
    AudioMixingOptions.prototype.playTime;
    /**
     * Whether the online audio file replaces the local audio stream.
     * - `true`: The content of the online audio file replaces the audio stream from the microphone.
     * - `false`: (Default) The online audio file is mixed with the audio stream from the microphone.
     *
     * \@remark
     * Safari does not support this parameter.
     * @type {?|undefined}
     */
    AudioMixingOptions.prototype.replace;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXVkaW8tbWl4aW5nLW9wdGlvbnMubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtYWdvcmEvIiwic291cmNlcyI6WyJsaWIvZGF0YS9tb2RlbHMvYXVkaW8tbWl4aW5nLW9wdGlvbnMubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFHQSx3Q0F1Q0M7Ozs7Ozs7OztJQWhDQywyQ0FBd0I7Ozs7OztJQUt4QixtQ0FBZTs7Ozs7O0lBS2Ysc0NBQWlCOzs7Ozs7OztJQU9qQixrQ0FBZTs7Ozs7O0lBS2Ysc0NBQWlCOzs7Ozs7Ozs7O0lBU2pCLHFDQUFrQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQXVkaW8gbWl4aW5nIHNldHRpbmdzLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIEF1ZGlvTWl4aW5nT3B0aW9ucyB7XG4gIC8qKlxuICAgKiAgV2hldGhlciBvciBub3QgdG8gc3RvcmUgdGhlIGF1ZGlvIG1peGluZyBmaWxlIGluIHRoZSBjYWNoZS5cbiAgICpcbiAgICogLSBgdHJ1ZWA6IChkZWZhdWx0KSBzdG9yZSB0aGUgYXVkaW8gbWl4aW5nIGZpbGUgaW4gdGhlIGNhY2hlIHRvIHNwZWVkIHVwIG1peGluZyB0aGlzIGZpbGUgdGhlIG5leHQgdGltZS5cbiAgICogLSBgZmFsc2VgOiBkbyBub3Qgc3RvcmUgdGhlIGF1ZGlvIG1peGluZyBmaWxlIGluIHRoZSBjYWNoZSB0byBzYXZlIFJBTS5cbiAgICovXG4gIGNhY2hlUmVzb3VyY2U/OiBib29sZWFuO1xuICAvKipcbiAgICogTnVtYmVyIG9mIHBsYXliYWNrIGxvb3BzIChvbmx5IHN1cHBvcnRzIENocm9tZSA2NSspXG4gICAqIEEgcG9zaXRpdmUgaW50ZWdlci4gVGhlIHZhbHVlIHJhbmdlIGlzIGBbMSwxMDAwMF1gLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBgMWAuXG4gICAqL1xuICBjeWNsZT86IG51bWJlcjtcbiAgLyoqXG4gICAqIFBhdGggb2YgdGhlIG9ubGluZSBhdWRpbyBmaWxlIHRvIG1peC4gQVNDSUkgY2hhcmFjdGVycyBvbmx5LCBhbmQgdGhlIHN0cmluZyBsZW5ndGggbXVzdCBiZSBncmVhdGVyIHRoYW4gMCBhbmQgbGVzcyB0aGFuIDI1NiBieXRlcy5cbiAgICogU3VwcG9ydGVkIGF1ZGlvIGZvcm1hdHM6IG1wMywgYWFjLCBhbmQgb3RoZXIgYXVkaW8gZm9ybWF0cyBkZXBlbmRpbmcgb24gdGhlIGJyb3dzZXIuXG4gICAqL1xuICBmaWxlUGF0aDogc3RyaW5nO1xuICAvKipcbiAgICogV2hldGhlciB0aGUgYXVkaW8gbWl4aW5nIGZpbGUgbG9vcHMgaW5maW5pdGVseS5cbiAgICpcbiAgICogLSBgdHJ1ZWA6IFRoZSBhdWRpbyBtaXhpbmcgZmlsZSBsb29wcyBpbmZpbml0ZWx5LiBEbyBub3QgdXNlIHRoaXMgb3B0aW9uIGlmIGN5Y2xlIGlzIHNwZWNpZmllZC5cbiAgICogLSBgZmFsc2VgOiAoRGVmYXVsdCkgRGlzYWJsZXMgdGhlIGluZmluaXRlIGxvb3BzLlxuICAgKi9cbiAgbG9vcD86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBTZXRzIHRoZSBwbGF5YmFjayBwb3NpdGlvbiAobXMpIG9mIHRoZSBhdWRpbyBtaXhpbmcgZmlsZS4gQW4gaW50ZWdlciwgYW5kIHRoZSB2YWx1ZSByYW5nZSBpcyBgWzAsMTAwMDAwMDAwXWAuXG4gICAqIElmIHlvdSBuZWVkIHRvIHBsYXkgdGhlIGZpbGUgZnJvbSB0aGUgYmVnaW5uaW5nLCBzZXQgdGhpcyBwYXJhbXRlciB0byBgMGAuXG4gICAqL1xuICBwbGF5VGltZTogbnVtYmVyO1xuICAvKipcbiAgICogV2hldGhlciB0aGUgb25saW5lIGF1ZGlvIGZpbGUgcmVwbGFjZXMgdGhlIGxvY2FsIGF1ZGlvIHN0cmVhbS5cbiAgICogLSBgdHJ1ZWA6IFRoZSBjb250ZW50IG9mIHRoZSBvbmxpbmUgYXVkaW8gZmlsZSByZXBsYWNlcyB0aGUgYXVkaW8gc3RyZWFtIGZyb20gdGhlIG1pY3JvcGhvbmUuXG4gICAqIC0gYGZhbHNlYDogKERlZmF1bHQpIFRoZSBvbmxpbmUgYXVkaW8gZmlsZSBpcyBtaXhlZCB3aXRoIHRoZSBhdWRpbyBzdHJlYW0gZnJvbSB0aGUgbWljcm9waG9uZS5cbiAgICpcbiAgICogQHJlbWFya1xuICAgKiBTYWZhcmkgZG9lcyBub3Qgc3VwcG9ydCB0aGlzIHBhcmFtZXRlci5cbiAgICovXG4gIHJlcGxhY2U/OiBib29sZWFuO1xufVxuIl19