!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("agora-rtc-sdk"),require("@angular/core")):"function"==typeof define&&define.amd?define("ngx-agora",["exports","agora-rtc-sdk","@angular/core"],t):t(e["ngx-agora"]={},e.AgoraRTC,e.ng.core)}(this,function(e,i,n){"use strict";var r=function(){function t(e){this.config=e,this.audioDevices=[],this.videoDevices=[],this.AgoraRTC=t.AgoraRTC,this.checkSystemRequirements()?this.collectDevices():this.AgoraRTC.Logger.error("Web RTC is not supported in this browser")}return t.prototype.checkSystemRequirements=function(){return this.AgoraRTC.checkSystemRequirements()},t.prototype.createClient=function(e,t,i,n){return void 0===t&&(t=!0),this.client=this.AgoraRTC.createClient(e),t&&this.init(this.config.AppID,i,n),this.client},t.prototype.createStream=function(e){if(!e.microphoneId&&this.audioDevices&&this.audioDevices.length){var t=this.audioDevices[0].deviceId;e.microphoneId=t}if(!e.cameraId&&this.videoDevices&&this.videoDevices.length){var i=this.videoDevices[0].deviceId;e.cameraId=e.cameraId||i}return this.AgoraRTC.createStream(e)},t.prototype.init=function(e,t,i){this.client.init(e,t,i)},t.prototype.collectDevices=function(){var n=this;this.AgoraRTC.getDevices(function(e){var t=e.filter(function(e){return"audioinput"===e.kind&&"default"!==e.deviceId}),i=e.filter(function(e){return"videoinput"===e.kind&&"default"!==e.deviceId});n.audioDevices=t,n.videoDevices=i})},t.AgoraRTC=i,t.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:undefined,decorators:[{type:n.Inject,args:["config"]}]}]},t.ngInjectableDef=n.defineInjectable({factory:function(){return new t(n.inject("config"))},token:t,providedIn:"root"}),t}(),o=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:n.Component,args:[{selector:"lib-ngx-agora",template:"\n    <p>\n      ngx-agora works!\n    </p>\n  "}]}],e.ctorParameters=function(){return[]},e}(),t=function(){function t(){}return t.forRoot=function(e){return{ngModule:t,providers:[r,{provide:"config",useValue:e}]}},t.decorators=[{type:n.NgModule,args:[{declarations:[o],exports:[o]}]}],t}(),a={Debug:0,Info:1,Warning:2,Error:3,None:4};a[a.Debug]="Debug",a[a.Info]="Info",a[a.Warning]="Warning",a[a.Error]="Error",a[a.None]="None";e.NgxAgoraService=r,e.NgxAgoraModule=t,e.ClientEvent={LocalStreamPublished:"stream-published",RemoteStreamAdded:"stream-added",RemoteStreamRemoved:"stream-removed",RemoteStreamSubscribed:"stream-subscribed",PeerLeave:"peer-leave",RemoteAudioMuted:"mute-audio",RemoteAudioUnmuted:"unmute-audio",RemoveVideoMuted:"mute-video",RemoteVideoUnmuted:"unmute-video",Error:"error",LocalClientBanned:"client-banned",ActiveSpeaker:"active-speaker",VolumeIndicator:"volume-indicator",LiveStreamingStarted:"liveStreamingStarted",LiveStreamingFailed:"liveStreamingFailed",LiveStreamingStopped:"liveStreamingStopped",LiveTranscodingUpdated:"liveTranscodingUpdated",StreamInjectedStatusUpdated:"streamInjectedStatus",TokenPrivelegeWillExpire:"onTokenPrivilegeWillExpire",TokenPrivelegeExpired:"onTokenPrivilegeDidExpire",NetworkTypeChanged:"network-type-changed",RecordingDeviceChanged:"recording-device-changed",AudioOutputDeviceChanged:"playout-device-changed",CameraChanged:"camera-changed",StreamTypeChanged:"stream-type-changed",ConnectionStateChanged:"connection-state-change",StreamReconnectionStart:"stream-reconnect-start",StreamReconnectionEnd:"stream-reconnect-end",ClientRoleChanged:"client-role-changed",PeerOnline:"peer-online",NetworkQualityReported:"network-quality",StreamFallback:"stream-fallback",StreamUpdated:"stream-updated",Exception:"exception"},e.CodecType={Opus:"1",AAC:"2"},e.LogLevel=a,e.MuteState={Unmuted:"0",Muted:"1"},e.StreamEvent={MediaAccessAllowed:"accessAllowed",MediaAccessDenied:"accessDenied",ScreenSharingStopped:"stopScreenSharing",AudioMixingPlayed:"audioMixingPlayed",AudioMixingFinished:"audioMixingFinished"},e.Éµb=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-agora.umd.min.js.map